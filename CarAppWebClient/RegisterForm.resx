<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>